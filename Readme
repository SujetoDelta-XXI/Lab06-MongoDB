# 📦 SocialMedia – Node.js + MongoDB

Aplicación web CRUD para gestionar **Posts** 

## 🚀 Instalación
1. Clona el repositorio e instala las dependencias:

git clone https://github.com/usuario/socialmedia-app.git
cd socialmedia-app
npm install


2. Crea el archivo .env en la raíz del proyecto:

env
MONGO_URI=mongodb://localhost:27017/socialmedia
PORT=3001


3. Inicia el servidor:

npm run dev
La app estará disponible en 👉 http://localhost:3001


4. 👤 Crear Usuario (Requerido)
Antes de crear posts, debes tener al menos un usuario registrado en la colección users de MongoDB.

Ejecuta en mongosh:

use socialmedia

db.users.insertOne({
  name: "Carlos",
  lastName: "Asparrin",
  email: "carlos@example.com",
  age: 25,
  phoneNumber: "999111222",
  password: "password123",
  createdAt: new Date()
})

db.users.insertOne({
  name: "Ana",
  lastName: "Torres",
  email: "ana@example.com",
  age: 28,
  phoneNumber: "999333444",
  password: "password456",
  createdAt: new Date()
})

Verifica que se crearon correctamente:
db.users.find().pretty()


5. ✍️ Funcionalidades

CRUD de Posts.

Selección del autor desde un menú desplegable.

Validaciones en Usuarios y Posts:

age ≥ 18 años.

password mínimo 8 caracteres.

title entre 5 y 30 caracteres.

content mínimo 10 caracteres.


6. 🔗 Endpoints Principales

GET	/	Página principal (Home)
GET	/posts	Lista de todos los posts
GET	/posts/add	Formulario para crear post
POST	/posts/add	Guardar nuevo post
GET	/posts/edit/:id	Formulario para editar post
POST	/posts/update/:id	Actualizar post
GET	/posts/delete/:id	Eliminar post


7. 📌 Notas
Debes crear un usuario antes de registrar posts.

Puedes usar MongoDB Compass o mongosh para gestionar los datos.

Ejecuta estos comandos para ver los datos:
use socialmedia
show collections
db.users.find().pretty()
db.posts.find().pretty()
